// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    //Only load to screen if the first two bits of the address are 10
    //And the load bit is 1
    And(a=load, b=address[14], out=loadtoperiph);
    Not(in=address[13], out=notaddr13);
    And(a=loadtoperiph, b=notaddr13, out=loadtoscreen);

    //Otherwise load to memory if the load bit is 1
    Not(in=address[14], out=notaddr14);
    And(a=load, b=notaddr14, out=loadtomem);

    //Ram is simple - will emit the value at an address or load to that address
    RAM16K(in=in, load=loadtomem, address=address[0..13], out=ramout);

    //I think screenout is just an fyi for the system? Don't fully understand
    Screen(in=in, load=loadtoscreen, address=address[0..12], out=screenout);
    //With keyboard load bit can be 0 or 1 - we'll still have key out
    //I don't actually make addresses above 24576 do nothing because I don't think they
    //could ever be received as input. But I can at a future time if I need to.
    Keyboard(out=keyout);
    //Look at the most significant bits of the address to determine whether we need
    //the message from ram, the screen, or the keyboard
    Mux4Way16(a=ramout, b=ramout, c=screenout, d=keyout, sel=address[13..14], out=out);
}